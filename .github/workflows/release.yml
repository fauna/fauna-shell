name: NPM Release

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
  workflow_dispatch:
    inputs:
      version:
        description: 'Test Version'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check Version Change
        id: check_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ -n "${{ github.event.inputs.version }}" ]]; then
              echo "version_changed=true" >> $GITHUB_OUTPUT
              echo "new_version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            else
              echo "No version specified for manual dispatch"
              exit 0
            fi
          else
            PREVIOUS_VERSION=$(git show HEAD~1:package.json | jq -r .version)
            CURRENT_VERSION=$(jq -r .version package.json)
            if [ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]; then
              echo "version_changed=true" >> $GITHUB_OUTPUT
              echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            fi
          fi
      
      - name: Generate Release Notes
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          if [ -f "RELEASE_NOTES.md" ] && grep -q "## \[${{ steps.check_version.outputs.new_version }}\]" RELEASE_NOTES.md; then
            sed -n "/## \[${{ steps.check_version.outputs.new_version }}\]/,/## \[/p" RELEASE_NOTES.md | sed '$d' > release_body.md
          else
            echo "### Automated Release Notes" > release_body.md
            echo "" >> release_body.md
            echo "#### Changes" >> release_body.md
            git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"- %s" >> release_body.md
          fi
      
      - name: Create Git Tag
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v${{ steps.check_version.outputs.new_version }}
          git push origin v${{ steps.check_version.outputs.new_version }}
      
      - name: Setup Node
        if: steps.check_version.outputs.version_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Publish to NPM
        if: steps.check_version.outputs.version_changed == 'true'
        run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        if: steps.check_version.outputs.version_changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check_version.outputs.new_version }}
          release_name: Release ${{ steps.check_version.outputs.new_version }}
          body_path: release_body.md